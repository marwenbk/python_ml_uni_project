# Dataset Description

The following dataset was collected from high-school students at two schools in Portugal using school reports and questionnaires.  
Furthermore, this dataset is composed of **33 features** and records student performance for two courses: **Mathematics (mat)** and **Portuguese language (por)**.  
Our primary goal is to predict the final grade **G3** using the available predictors, both of which will be illustrated in comprehensive detail below:

**Features (short descriptions):**

- **School** — Student's school (Binary column: `GP` — Gabriel Pereira, `MS` — Mousinho da Silveira)  
- **Sex** — Student's gender (Binary column: `M` — Male, `F` — Female)  
- **Age** — Student's age (Numeric column: 15–22)  
- **Address** — Student's home address type (Binary column: `U` — Urban, `R` — Rural)  
- **Famsize** — Student's family size (Binary column: `LE3` — ≤ 3, `GT3` — > 3)  
- **Pstatus** — Parent marital status (Binary column: `T` — together, `A` — apart)  
- **Medu** — Mother's education (Numeric column: `0` - no education, `1` - primary education (4th grade), `2` - secondary education (5th to 9th grade), `3` - high school (9th to 12th grade) or `4` - higher education)
- **Fedu** — Father's education (Numeric column: `0` - no education, `1` - primary education (4th grade), `2` - secondary education (5th to 9th grade), `3` - high school (9th to 12th grade) or `4` - higher education)
- **Mjob** — Mother's job (Nominal column: 'teacher', 'health' care related, civil 'services' (e.g. administrative or police), 'at_home' or 'other')
- **Fjob** — Father's job (Nominal column: 'teacher', 'health' care related, civil 'services' (e.g. administrative or police), 'at_home' or 'other')  
- **Reason** — Reason to choose this school (Nominal column: close to 'home', school 'reputation', 'course' preference or 'other')
- **Guardian** — Student's guardian (Nominal column: 'mother', 'father' or 'other')  
- **Traveltime** — Home to school travel time (Numeric column: 1 - `< 15 min.`, 2 - `15 to 30 min`., 3 - `30 min. to 1 hour`, or 4 - `>1 hour`)
- **Studytime** — Weekly study time (Numeric column: 1 - `< 2 hours`, 2 - `2 to 5 hours`, 3 - `5 to 10 hours`, or 4 - `> 10 hours`)
- **Failures** — Number of past class failures (Numeric column: n if 1 <= n < 3, else 4)  
- **Schoolsup** — Extra educational support (Binary column: `yes`/`no`)  
- **Famsup** — Family educational support (Binary column: `yes`/`no`)  
- **Paid** — Extra paid classes (Binary column: `yes`/`no`)  
- **Activities** — Extra-curricular activities (Binary column: `yes`/`no`)  
- **Nursery** — Attended nursery (Binary column: `yes`/`no`)  
- **Higher** — Wants higher education (Binary column: `yes`/`no`)  
- **Internet** — Internet access at home (Binary column: `yes`/`no`)  
- **Romantic** — In a romantic relationship (Binary column: `yes`/`no`)  
- **Famrel** — Quality of family relationships (Numeric column: from 1 - `very bad` to 5 - `excellent`)
- **Freetime** — Free time after school (Numeric column: from 1 - `very low `to 5 - `very high`)
- **Goout** — Going out with friends (Numeric column: from 1 - `very low` to 5 - `very high`)
- **Dalc** — Workday alcohol consumption (Numeric column: from 1 - `very low `to 5 - `very high`)
- **Walc** — Weekend alcohol consumption (Numeric column: from 1 - `very low `to 5 - `very high`)  
- **Health** — Current health status (Numeric column: from 1 - `very bad` to 5 - `excellent`)
- **Absences** — Number of school absences (Numeric column: from 0 to 93)
- **G1** — First period grade (Numeric column: from 0 to 20)  
- **G2** — Second period grade (Numeric column: from 0 to 20)
- **G3** — Final grade (Numeric column: from 0 to 20) — **target**

## Setup and Usage

### 1) Create and activate a virtual environment (macOS/Linux)

```bash
python3 -m venv .venv
source .venv/bin/activate
python -m pip install --upgrade pip
```

To deactivate later:

```bash
deactivate
```

### 2) Install dependencies

```bash
pip install -r requirements.txt
```

### 3) Run the notebook

Option A — launch Jupyter and open `main.ipynb`:

```bash
jupyter notebook
```

Optional: register the virtualenv as a Jupyter kernel (so it appears in the UI):

```bash
python -m ipykernel install --user --name ml_msb --display-name "Python (ml_msb)"
```

### 4) Run the Python script instead of the notebook

```bash
python machine_learning_project_presentation_(final_version).py
```
